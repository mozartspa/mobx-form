(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[162],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return c}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=u(n),c=i,f=d["".concat(l,".").concat(c)]||d[c]||p[c]||o;return n?r.createElement(f,a(a({ref:t},m),{},{components:n})):r.createElement(f,a({ref:t},m))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7337:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),a=["components"],s={sidebar_position:4},l={unversionedId:"getting-started/submit",id:"getting-started/submit",isDocsHomePage:!1,title:"Submit",description:"When does form submission run?",source:"@site/docs/getting-started/submit.md",sourceDirName:"getting-started",slug:"/getting-started/submit",permalink:"/mobx-form/docs/getting-started/submit",editUrl:"https://github.com/mozartspa/mobx-form/edit/master/website/docs/getting-started/submit.md",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Validation",permalink:"/mobx-form/docs/getting-started/validation"},next:{title:"useForm",permalink:"/mobx-form/docs/api/useForm"}},u=[{value:"When does form submission run?",id:"when-does-form-submission-run",children:[]},{value:"What happens during form submission?",id:"what-happens-during-form-submission",children:[]},{value:"Example",id:"example",children:[]}],m={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"when-does-form-submission-run"},"When does form submission run?"),(0,o.kt)("p",null,"The form is submitted when:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<Form />")," exposed by ",(0,o.kt)("inlineCode",{parentName:"li"},"useForm()")," is used and it receives a form submit event."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"form.submit()")," is called."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"form.handleSubmit(event)")," is called passing a form submit event.")),(0,o.kt)("h2",{id:"what-happens-during-form-submission"},"What happens during form submission?"),(0,o.kt)("p",null,"When a form is submitted:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"All the fields in the form values are ",(0,o.kt)("em",{parentName:"li"},"touched"),"."),(0,o.kt)("li",{parentName:"ul"},"Form validation runs."),(0,o.kt)("li",{parentName:"ul"},"If there are errors: those errors are set, submission stops, and ",(0,o.kt)("inlineCode",{parentName:"li"},"onFailedSubmit")," callback is called."),(0,o.kt)("li",{parentName:"ul"},"Otherwise ",(0,o.kt)("inlineCode",{parentName:"li"},"onSubmit")," callback is called with the validated values of the form."),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"onSubmit")," returns form errors, those errors are set to the form.")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Let's see an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import React from "react"\nimport { observer } from "mobx-react-lite"\nimport { useField, useForm } from "@mozartspa/mobx-form"\n\nconst App = observer(() => {\n  const form = useForm({\n    initialValues: {\n      name: "",\n    },\n    onValidate: (values) => {\n      return {\n        name: values.name === "" ? "Name is required" : undefined,\n      }\n    },\n    onSubmit: async (values) => {\n      // Call API passing form values\n      const apiErrors = await MyAPI.updateMyModel(values)\n\n      // Convert API errors to a FormError shape:\n      // (object whose keys are field names and value is `string | string[]\xa0| undefined`).\n      // This function should be written by you, considering the shape of your API errors.\n      const formErrors = convertApiErrorsToFormErrors(apiErrors)\n      return formErrors\n    },\n    onFailedSubmit: () => {\n      // Uh-oh. Validation failed before submitting.\n      // Here we have the chance to show the user a notification.\n    },\n  })\n\n  const nameField = useField("name", { form })\n\n  return (\n    <form onSubmit={form.handleSubmit}>\n      <div>\n        <label>Name</label>\n        <input type="text" {...nameField.input} />\n        {nameField.isTouched && nameField.error}\n      </div>\n      <button type="submit">Submit</button>\n    </form>\n  )\n})\n\nexport default App\n')),(0,o.kt)("p",null,"When we press the submit button, the form submission starts."),(0,o.kt)("p",null,"In case we have not filled in the name field:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"onValidate")," returns a form error"),(0,o.kt)("li",{parentName:"ul"},"this error is set to the form"),(0,o.kt)("li",{parentName:"ul"},"submission stops"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"onFailedSubmit")," is called")),(0,o.kt)("p",null,"Instead, if we have filled in the name field, ",(0,o.kt)("inlineCode",{parentName:"p"},"onSubmit")," is called and:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"if our API returns some api errors:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"these errors are converted to a FormError shape, and returned by ",(0,o.kt)("inlineCode",{parentName:"li"},"onSubmit")),(0,o.kt)("li",{parentName:"ul"},"these converted errors are set to the form"),(0,o.kt)("li",{parentName:"ul"},"the user sees these errors in the form"))),(0,o.kt)("li",{parentName:"ul"},"otherwise everyone is happy, and this form made its job!")))}p.isMDXComponent=!0}}]);