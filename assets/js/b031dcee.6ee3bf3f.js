(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[483],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,l=function(e,t){if(null==e)return{};var r,a,l={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var o=a.createContext({}),d=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=d(r),m=l,h=c["".concat(o,".").concat(m)]||c[m]||p[m]||n;return r?a.createElement(h,i(i({ref:t},u),{},{components:r})):a.createElement(h,i({ref:t},u))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=r.length,i=new Array(n);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:l,i[1]=s;for(var d=2;d<n;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5056:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},metadata:function(){return o},toc:function(){return d},default:function(){return p}});var a=r(2122),l=r(9756),n=(r(7294),r(3905)),i=["components"],s={sidebar_position:1},o={unversionedId:"api/useForm",id:"api/useForm",isDocsHomePage:!1,title:"useForm",description:"Main hook to create a form instance.",source:"@site/docs/api/useForm.md",sourceDirName:"api",slug:"/api/useForm",permalink:"/mobx-form/docs/api/useForm",editUrl:"https://github.com/mozartspa/mobx-form/edit/master/website/docs/api/useForm.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Submit",permalink:"/mobx-form/docs/getting-started/submit"},next:{title:"useField",permalink:"/mobx-form/docs/api/useField"}},d=[{value:"Type",id:"type",children:[]},{value:"FormConfig",id:"formconfig",children:[{value:"initialValues",id:"initialvalues",children:[]},{value:"validateOnChange",id:"validateonchange",children:[]},{value:"validateOnBlur",id:"validateonblur",children:[]},{value:"onValidate",id:"onvalidate",children:[]},{value:"validateDebounce",id:"validatedebounce",children:[]},{value:"onSubmit",id:"onsubmit",children:[]},{value:"onFailedSubmit",id:"onfailedsubmit",children:[]}]},{value:"UseFormResult",id:"useformresult",children:[]},{value:"Form",id:"form",children:[{value:"values",id:"values",children:[]},{value:"errors",id:"errors",children:[]},{value:"touched",id:"touched",children:[]},{value:"isSubmitting",id:"issubmitting",children:[]},{value:"isValidating",id:"isvalidating",children:[]},{value:"isDirty",id:"isdirty",children:[]},{value:"isValid",id:"isvalid",children:[]},{value:"setErrors",id:"seterrors",children:[]},{value:"setTouched",id:"settouched",children:[]},{value:"setValues",id:"setvalues",children:[]},{value:"setFieldValue",id:"setfieldvalue",children:[]},{value:"setFieldError",id:"setfielderror",children:[]},{value:"addFieldError",id:"addfielderror",children:[]},{value:"setFieldTouched",id:"setfieldtouched",children:[]},{value:"getFieldValue",id:"getfieldvalue",children:[]},{value:"getFieldError",id:"getfielderror",children:[]},{value:"getFieldErrors",id:"getfielderrors",children:[]},{value:"isFieldTouched",id:"isfieldtouched",children:[]},{value:"isFieldValid",id:"isfieldvalid",children:[]},{value:"isFieldDirty",id:"isfielddirty",children:[]},{value:"validate",id:"validate",children:[]},{value:"validateField",id:"validatefield",children:[]},{value:"reset",id:"reset",children:[]},{value:"resetField",id:"resetfield",children:[]},{value:"submit",id:"submit",children:[]},{value:"handleSubmit",id:"handlesubmit",children:[]},{value:"handleReset",id:"handlereset",children:[]},{value:"register",id:"register",children:[]}]}],u={toc:d};function p(e){var t=e.components,r=(0,l.Z)(e,i);return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Main hook to create a form instance."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'import { useForm } from "@mozartspa/mobx-form"\n')),(0,n.kt)("h2",{id:"type"},"Type"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"useForm(config: FormConfig): UseFormResult\n")),(0,n.kt)("h2",{id:"formconfig"},"FormConfig"),(0,n.kt)("p",null,"Configuration to pass to ",(0,n.kt)("inlineCode",{parentName:"p"},"useForm()")),(0,n.kt)("h3",{id:"initialvalues"},"initialValues"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"initialValues?: Values | (() => Values)\n")),(0,n.kt)("p",null,"The initial values of the form. You can pass directly the values or a function that returns the values."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"validateonchange"},"validateOnChange"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"validateOnChange?: boolean\n")),(0,n.kt)("p",null,"If ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),", the form will be validated every time any field changes. By default it is ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"validateonblur"},"validateOnBlur"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"validateOnBlur?: boolean\n")),(0,n.kt)("p",null,"If ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),", the form will be validated every time a ",(0,n.kt)("inlineCode",{parentName:"p"},"blur")," event occurs. By default it is ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"onvalidate"},"onValidate"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"onValidate?: (values: Values) => FormErrors | Promise<FormErrors>\n")),(0,n.kt)("p",null,"Callback that is called to validate the form. It receives the ",(0,n.kt)("em",{parentName:"p"},"values")," of the form and it should return an object whose keys are the field names (with ",(0,n.kt)("strong",{parentName:"p"},"dot notation"),") and the value is ",(0,n.kt)("inlineCode",{parentName:"p"},"string | string[] | undefined"),". It can be an ",(0,n.kt)("em",{parentName:"p"},"async")," function."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"validatedebounce"},"validateDebounce"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"validateDebounce?: boolean | number | { wait?: number; leading?: boolean }\n")),(0,n.kt)("p",null,"Value that tells if validation debounce should be active and how:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"false"),": debounce will not be active (as per default)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"true"),": debounce will be active, with default values for ",(0,n.kt)("inlineCode",{parentName:"li"},"wait")," (300) and ",(0,n.kt)("inlineCode",{parentName:"li"},"leading")," (false)"),(0,n.kt)("li",{parentName:"ul"},"a ",(0,n.kt)("inlineCode",{parentName:"li"},"number"),": debounce will be active with ",(0,n.kt)("inlineCode",{parentName:"li"},"wait")," as the number you passed, and ",(0,n.kt)("inlineCode",{parentName:"li"},"leading")," false"),(0,n.kt)("li",{parentName:"ul"},"a ",(0,n.kt)("inlineCode",{parentName:"li"},"{ wait?: number; leading?: boolean }")," object: debounce will be active with the values you passed")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"onsubmit"},"onSubmit"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"onSubmit?: (values: Values) => void | FormErrors | Promise<void | FormErrors>\n")),(0,n.kt)("p",null,"Callback that is called when submitting the form. It receives the values of the form and can return form errors as ",(0,n.kt)("a",{parentName:"p",href:"#onvalidate"},"onValidate"),". If it returns an errors object, these errors will be set to the form."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"onfailedsubmit"},"onFailedSubmit"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"onFailedSubmit?: () => void\n")),(0,n.kt)("p",null,"Callback that is called when trying to submit the form but there are validation errors that prevents the submission to continue. It gives the chance to show a notification to the user saying that there are errors that should be solved."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"useformresult"},"UseFormResult"),(0,n.kt)("p",null,"It is what ",(0,n.kt)("inlineCode",{parentName:"p"},"useForm()")," returns. It is a ",(0,n.kt)("inlineCode",{parentName:"p"},"Form")," instance with two additional components: ",(0,n.kt)("inlineCode",{parentName:"p"},"<Form/>")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"<FormContext/>"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"type UseFormResult<Values> = Form<Values> & {\n  FormContext: React.FC<{}>\n  Form: React.FC<FormProps>\n}\n")),(0,n.kt)("h2",{id:"form"},"Form"),(0,n.kt)("p",null,"It's the form instance."),(0,n.kt)("h3",{id:"values"},"values"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"values: Values\n")),(0,n.kt)("p",null,"The current values of the form."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"errors"},"errors"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"errors: FormErrors\n")),(0,n.kt)("p",null,"The current errors of the form. It's an object whose keys are the field names (with ",(0,n.kt)("strong",{parentName:"p"},"dot notation"),") and the value is ",(0,n.kt)("inlineCode",{parentName:"p"},"string | string[] | undefined"),"."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"touched"},"touched"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"touched: FormTouched\n")),(0,n.kt)("p",null,"The current fields ",(0,n.kt)("em",{parentName:"p"},"touched")," by the user. It's an object whose keys are the field names (with ",(0,n.kt)("strong",{parentName:"p"},"dot notation"),") and the value is ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean | undefined"),"."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"issubmitting"},"isSubmitting"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"isSubmitting: boolean\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the form is submitting."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isvalidating"},"isValidating"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"isValidating: boolean\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the form is validating."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isdirty"},"isDirty"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"isDirty: boolean\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the values are different from the initialValues."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isvalid"},"isValid"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"isValid: boolean\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true")," if there are errors."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"seterrors"},"setErrors"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"setErrors(errors: FormErrors): void\n")),(0,n.kt)("p",null,"Sets the errors of the form. ",(0,n.kt)("inlineCode",{parentName:"p"},"errors")," should be an object whose keys are the field names (with ",(0,n.kt)("strong",{parentName:"p"},"dot notation"),") and the value is ",(0,n.kt)("inlineCode",{parentName:"p"},"string | string[] | undefined"),"."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"settouched"},"setTouched"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"setTouched(touched: FormTouched): void\n")),(0,n.kt)("p",null,"Sets the ",(0,n.kt)("em",{parentName:"p"},"touche")," fields of the form. ",(0,n.kt)("inlineCode",{parentName:"p"},"touched")," should be an object whose keys are the field names (with ",(0,n.kt)("strong",{parentName:"p"},"dot notation"),") and the value is ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean | undefined"),"."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"setvalues"},"setValues"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"setValues(values: Values): void\n")),(0,n.kt)("p",null,"Sets the values of the form."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"setfieldvalue"},"setFieldValue"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"setFieldValue(field: string, value: any): void\n")),(0,n.kt)("p",null,"Sets the value of a field."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"setfielderror"},"setFieldError"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"setFieldError(field: string, message: string | string[] | undefine): void\n")),(0,n.kt)("p",null,"Sets the error of a field."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"addfielderror"},"addFieldError"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"addFieldError(field: string, message: string | string[] | undefine): void\n")),(0,n.kt)("p",null,"Adds an error to a field. It will be merged with the current error of the field."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"setfieldtouched"},"setFieldTouched"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"setFieldTouched(field: string, isTouched?: boolean): void\n")),(0,n.kt)("p",null,"Sets if a field should be considered ",(0,n.kt)("em",{parentName:"p"},"touched"),"."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getfieldvalue"},"getFieldValue"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"getFieldValue(field: string): any\n")),(0,n.kt)("p",null,"Gets the value of a field."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getfielderror"},"getFieldError"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"getFieldError(field: string): string | undefined\n")),(0,n.kt)("p",null,"Gets the first error of a field, if any."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getfielderrors"},"getFieldErrors"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"getFieldErrors(field: string): string[] | undefined\n")),(0,n.kt)("p",null,"Gets the errors of a field, if any."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isfieldtouched"},"isFieldTouched"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"isFieldTouched(field: string): boolean\n")),(0,n.kt)("p",null,"Returns ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," if a field has been ",(0,n.kt)("em",{parentName:"p"},"touched")," by the user."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isfieldvalid"},"isFieldValid"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"isFieldValid(field: string): boolean\n")),(0,n.kt)("p",null,"Returns ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the field has no error."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isfielddirty"},"isFieldDirty"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"isFieldValid(field: string): boolean\n")),(0,n.kt)("p",null,"Returns ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the field has a different value than the initial value"),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"validate"},"validate"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"validate(): Promise<FormErrors>\n")),(0,n.kt)("p",null,"Performs form validation. It returns a Promise that is resolved with the errors."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"validatefield"},"validateField"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"validateField(field: string): Promise<string | string[] | undefined>\n")),(0,n.kt)("p",null,"Performs field validation. It returns a Promise that is resolved with the errors of the field."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"reset"},"reset"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"reset(values?: Values): void\n")),(0,n.kt)("p",null,"Resets the form values to the initial values. If you pass a value as argument, that value will be used as initial values."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"resetfield"},"resetField"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"resetField(field: string, value?: any): void\n")),(0,n.kt)("p",null,"Resets the value of the field to the initial value. If you pass a value as second argument, that value will be used as initial value."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"submit"},"submit"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"submit(): Promise<FormErrors>\n")),(0,n.kt)("p",null,"Performs form submission. It returns a Promise that is resolved with the errors of the form."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"handlesubmit"},"handleSubmit"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"handleSubmit(e?: React.FormEvent<HTMLFormElement>): Promise<FormErrors>\n")),(0,n.kt)("p",null,"Similar to ",(0,n.kt)("a",{parentName:"p",href:"#submit"},"submit")," but it can receive a submit event that will be default prevented."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"handlereset"},"handleReset"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"handleReset(e?: React.SyntheticEvent<any>): void\n")),(0,n.kt)("p",null,"Similar to ",(0,n.kt)("a",{parentName:"p",href:"#reset"},"reset")," but it can receive a reset event that will be default prevented."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"register"},"register"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"register: (field: string, registrant: FieldRegistrant<any, Values>) => Disposer\n")),(0,n.kt)("p",null,"Used internally by ",(0,n.kt)("inlineCode",{parentName:"p"},"useField")," in order to register itself to the form."))}p.isMDXComponent=!0}}]);